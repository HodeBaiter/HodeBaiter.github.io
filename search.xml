<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mybatisIdType</title>
      <link href="/2022/07/12/mybatisIdType/"/>
      <url>/2022/07/12/mybatisIdType/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatisplus-主键自动递增失效"><a href="#mybatisplus-主键自动递增失效" class="headerlink" title="mybatisplus 主键自动递增失效"></a>mybatisplus 主键自动递增失效</h1><blockquote><p>mybatisplus 3.3版本后默认采用UUID+雪花算法自动生成主键id.</p></blockquote><p>注解设置<code>@TableId(value = &quot;id&quot;,type = IdType.*AUTO*)</code> 后无效依然为13位生成id</p><p>找到的解决方法是删除表格重新建立,不知道为什么.</p><p>可以用springboot初始化完成,这样就不用每次都去删表格了</p><h2 id="resource下创建sql文件夹存放初始化的sql文件"><a href="#resource下创建sql文件夹存放初始化的sql文件" class="headerlink" title="resource下创建sql文件夹存放初始化的sql文件"></a>resource下创建sql文件夹存放初始化的sql文件</h2><p><strong>eg.</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sqlschema</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `form`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> form</span><br><span class="line">(</span><br><span class="line">    name         <span class="type">varchar</span>(<span class="number">30</span>)  <span class="keyword">null</span>,</span><br><span class="line">    id           <span class="type">bigint</span>(<span class="number">50</span>) auto_increment</span><br><span class="line">        <span class="keyword">primary</span> key,</span><br><span class="line">    title        <span class="type">varchar</span>(<span class="number">30</span>)  <span class="keyword">null</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sqldata</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span>  jsjyz.form (name, id, title)</span><br><span class="line"><span class="keyword">values</span>  (<span class="string">&#x27;dsds&#x27;</span>, <span class="number">1</span>, <span class="keyword">null</span>),</span><br><span class="line">        (<span class="string">&#x27;dssds&#x27;</span>, <span class="number">2</span>, <span class="keyword">null</span>),</span><br><span class="line">        (<span class="string">&#x27;dssds&#x27;</span>, <span class="number">3</span>, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h2 id="springboot中配置"><a href="#springboot中配置" class="headerlink" title="springboot中配置"></a>springboot中配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">sql:</span></span><br><span class="line">  <span class="attr">init:</span></span><br><span class="line">    <span class="attr">schema-locations:</span> <span class="string">classpath*:sql/form.sql</span></span><br><span class="line">    <span class="attr">data-locations:</span> <span class="string">classpath*:sql/data/formdata.sql</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mybatisplus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> mybatisplus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于vue的低级错误收集</title>
      <link href="/2022/05/29/lowmistake/"/>
      <url>/2022/05/29/lowmistake/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-templete-or-render-function-not-defined-的一个低级错误"><a href="#Vue-templete-or-render-function-not-defined-的一个低级错误" class="headerlink" title="Vue templete or render function not defined 的一个低级错误"></a>Vue templete or render function not defined 的一个低级错误</h1><p>在写vue-router的routers时</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/form&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;form&quot;</span>,</span><br><span class="line">      <span class="attr">components</span>: &#123;</span><br><span class="line">        <span class="attr">default</span>: <span class="title class_">ReserveForm</span>,</span><br><span class="line">        <span class="attr">header</span>: <span class="title class_">MainNavbar</span>,</span><br><span class="line">        <span class="attr">footer</span>: <span class="title class_">MainFooter</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="attr">header</span>: &#123; <span class="attr">colorOnScroll</span>: <span class="number">400</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>将components 写成了 component ,导致只能渲染其中第一个组件而导致报错.</p><blockquote><p>这个报错导致原因很多,大部分是因为没有正确的使用组件的低级错误.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 低级错误 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue模板工具收集</title>
      <link href="/2022/05/29/vuetool/"/>
      <url>/2022/05/29/vuetool/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-模板工具收集"><a href="#Vue-模板工具收集" class="headerlink" title="Vue 模板工具收集"></a>Vue 模板工具收集</h1><h1 id="vue-material-kit"><a href="#vue-material-kit" class="headerlink" title="vue-material-kit"></a>vue-material-kit</h1><p>基于material design 的 vue template ,可用于blog网站,服务网站.</p><p><a href="https://github.com/vuematerial/vue-material">https://github.com/vuematerial/vue-material</a></p><h1 id="A-cute-timeline-component"><a href="#A-cute-timeline-component" class="headerlink" title="A cute timeline component"></a><strong><strong>A cute timeline component</strong></strong></h1><p>一个timeline vue模板.样式丰富,但是文本内容较为受限.</p><p><a href="https://vuejsexamples.com/a-cute-timeline-component-for-vue-js/">A cute timeline component for Vue.js</a></p><h1 id="vue-kanban"><a href="#vue-kanban" class="headerlink" title="vue-kanban"></a>vue-kanban</h1><p>类似notion view border 的可拖拽看板</p><p><a href="https://github.com/BrockReece/vue-kanban">https://github.com/BrockReece/vue-kanban</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> tool </tag>
            
            <tag> vueTemplate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断元素是否位于可视区域</title>
      <link href="/2022/05/28/isViewPart/"/>
      <url>/2022/05/28/isViewPart/</url>
      
        <content type="html"><![CDATA[<h1 id="判断视区"><a href="#判断视区" class="headerlink" title="判断视区"></a>判断视区</h1><ol><li>offsetTop, scrollTop</li><li>getBoundingClientRect</li></ol><h2 id="offsetTop-scrollTop"><a href="#offsetTop-scrollTop" class="headerlink" title="offsetTop, scrollTop"></a>offsetTop, scrollTop</h2><p>判断一个元素是否在可视范围内知道元素距其父元素距离offsetTop，已滚动像素scrollTop，和窗口高度。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isInViewPortOfOne</span> (el) &#123;    </span><br><span class="line"><span class="comment">// viewPortHeight 兼容所有浏览器写法    </span></span><br><span class="line"><span class="keyword">const</span> viewPortHeight = <span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>     </span><br><span class="line"><span class="keyword">const</span> offsetTop = el.<span class="property">offsetTop</span>    </span><br><span class="line"><span class="keyword">const</span> scrollTop = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>    </span><br><span class="line"><span class="keyword">const</span> top = offsetTop - scrollTop    </span><br><span class="line"><span class="keyword">return</span> top &lt;= viewPortHeight</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>offsetTop: 元素顶部父组件顶部</li><li>viewPorHeight: 设备高度</li><li>scrollTop: 滚动像素</li></ul><p><em><strong>缺点 : 依赖于父组件.</strong></em></p><h2 id="getBoundingClientRect"><a href="#getBoundingClientRect" class="headerlink" title="getBoundingClientRect"></a>getBoundingClientRect</h2><p>**getBoundingClientRect()**中宽高都是元素相对于视窗的 所以根据我们的需求无需计算直接使用就行.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">isVeiw</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> viewWidth =</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">innerWidth</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>;</span><br><span class="line">      <span class="keyword">const</span> viewHeight =</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>;</span><br><span class="line">      <span class="keyword">const</span> &#123; top, right, bottom, left &#125; = el.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(viewHeight);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(bottom);</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">        viewHeight &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        viewWidth &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        bottom &lt; viewHeight &amp;&amp;</span><br><span class="line">        left &lt; viewWidth</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参考文章:</strong></p><p><a href="https://github.com/febobo/web-interview/issues/84">https://github.com/febobo/web-interview/issues/84</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 自定义滚动事件</title>
      <link href="/2022/05/27/vuescrollevt/"/>
      <url>/2022/05/27/vuescrollevt/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-自定义滚动事件"><a href="#Vue-自定义滚动事件" class="headerlink" title="Vue 自定义滚动事件"></a>Vue 自定义滚动事件</h1><h1 id="实现需求"><a href="#实现需求" class="headerlink" title="实现需求"></a>实现需求</h1><p> 滚轮下拉,若元素位于可视区域触发事件显示元素.</p><blockquote><p>网络上大部分方法是在方法里到某一滚动值后触发显示,但是大都是写死的,复用性差,难以维护,所以这里选择动态获取DOM计算.</p></blockquote><h1 id="refs"><a href="#refs" class="headerlink" title="refs"></a>refs</h1><p>获取DOM,可以首先想到的是使用ref,然后<code>this.$refs.Dom</code>.但是经过查阅文档</p><blockquote><p>关于 ref 注册时机的重要说明：因为 ref 本身是作为渲染函数的结果而创建的，在初始渲染时你不能访问它们——它们还不存在！<code>$refs</code><br> 也是非响应式的，因此你不应该试图用它在模板中做数据绑定。</p></blockquote><p><a href="https://v3.cn.vuejs.org/api/special-attributes.html#key">特殊 attribute | Vue.js</a></p><p>对此解决办法不是没有,就是使用<code>this.$nextTick()</code> ,但是要写的是另一种vue更为推荐的使用自定义指令的方式.</p><h1 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h1><p>先贴参考文档</p><p><a href="https://cn.vuejs.org/v2/cookbook/creating-custom-scroll-directives.html">创建自定义滚动指令 - Vue.js</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">handleScroll</span>: <span class="keyword">function</span>(<span class="params">el</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> viewWidth =</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">innerWidth</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>;</span><br><span class="line">      <span class="keyword">const</span> viewHeight =</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>;</span><br><span class="line">      <span class="keyword">const</span> &#123; top, right, bottom, left &#125; = el.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(viewHeight);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(bottom);</span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        viewHeight &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        viewWidth &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        bottom &lt; viewHeight &amp;&amp;</span><br><span class="line">        left &lt; viewWidth</span><br><span class="line">      ) &#123;</span><br><span class="line">        el.<span class="title function_">setAttribute</span>(</span><br><span class="line">          <span class="string">&quot;style&quot;</span>,</span><br><span class="line">          <span class="string">&quot;animation: fadeInUp;animation-duration: 2s;opacity:1; &quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;显示&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        el.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;opacity:0&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;隐藏&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">directives</span>: &#123;</span><br><span class="line">    <span class="attr">showDirective</span>: &#123;</span><br><span class="line">      <span class="attr">inserted</span>: <span class="keyword">function</span>(<span class="params">el, binding</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> showDirective = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>();</span><br><span class="line">          <span class="keyword">if</span> (binding.<span class="title function_">value</span>(el)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;remove&quot;</span>);</span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;scroll&quot;</span>, showDirective);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, showDirective);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-showDirective=<span class="string">&quot;handleScroll&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>先看自定义指令,关键在于如何把指令中的DOM取出去使用.</p><p>自定义指令中<code>binding.value(el)</code> 指向所绑定的方法handleScroll,DOM就可以作为方法的入参<code>handleScroll(el)</code> 进行计算.</p><p>接下来需要在方法中判断是否在可视区域这一部分移步.<br><a href="/source/_posts/vuescrollevt.md">判断视区</a></p><ul><li>若元素不可见直接 return false . 在指令中接受flase 则会为页面添加scroll监视</li><li>若位于可视区域则设置样式属性,让元素可见(这里可以自行添加喜欢的动画效果,我这里使用了animation.).然后return ture. 指令会关闭监视.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> scroll </tag>
            
            <tag> directive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+butterfly 搭建避坑</title>
      <link href="/2022/05/19/hexoStart/"/>
      <url>/2022/05/19/hexoStart/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h1><p>hexo d 上传GitHub后css,js都不生效<br>本地serve 可以加载,hexo d上传后只有html.在浏览器中f12发现css和js的资源都无法加载.  </p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h1><p>在根配置文件<code>_config.yml</code>中将url修改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://yourWebSite/yourroot</span><br><span class="line">root:/</span><br></pre></td></tr></table></figure><p>url是你的网页访问地址,如果使用GitHubpages,复制仓库地址后加上你的根地址即<code>root</code></p><p>eg.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://github.com/******/******.github.io.git/</span><br><span class="line">root:/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
